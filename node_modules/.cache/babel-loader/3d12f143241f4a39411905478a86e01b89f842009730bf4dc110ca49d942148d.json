{"ast":null,"code":"import _defineProperty from\"C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Button,Col,Form,Row,Table}from\"react-bootstrap\";import{useRef,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SalaryInformation(props){var _ref=[useRef(),useRef(),useRef(),useRef()],companyNameRef=_ref[0],monthsRef=_ref[1],totalFestivalsRef=_ref[2],inputTypeRef=_ref[3];var _ref2=[useRef(),useRef()],companyInfoRef=_ref2[0],salaryInputRef=_ref2[1];var _ref3=[useRef(),useRef(),useRef(),useRef()],basicRef=_ref3[0],houseRef=_ref3[1],medicalRef=_ref3[2],conveyanceRef=_ref3[3];var _ref4=[useRef(),useRef(),useRef()],lfaRef=_ref4[0],festivalRef=_ref4[1],otherTaxableRef=_ref4[2];var initialCompanyInfo={company:'',months:12,festivals:2,inputType:'monthly'};var _useState=useState(initialCompanyInfo),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var handleChange=function handleChange(name,value){setValues(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},name,value));});};var resetForms=function resetForms(){salaryInputRef.current.reset();// for some reasons, company info refs were not working. IDK\nsetValues(_objectSpread({},initialCompanyInfo));};var calculateTaxableOf=function calculateTaxableOf(basic,percent,max,received){var atMax=percent?Math.min(basic*percent,max):max;return received>atMax?received-atMax:0;};var calculateMaxExemptionOf=function calculateMaxExemptionOf(basic,percent,max,received){var atMax=percent?Math.min(basic*percent,max):max;return received>atMax?atMax:received;};var calculateTaxableAmount=function calculateTaxableAmount(){if(!values['company']){alert('Add a company name.');return false;}var festivalMultiplier=1;var basicMultiplier=1;if(values['inputType']==='monthly'){festivalMultiplier=values['festivals'];basicMultiplier=values['months'];}// already converted to yearly\nvar _map=[basicRef,houseRef,medicalRef,conveyanceRef,lfaRef].map(function(i){return parseInt(i.current.value||0,10)*basicMultiplier;}),_map2=_slicedToArray(_map,5),basic=_map2[0],house=_map2[1],medical=_map2[2],conveyance=_map2[3],lfa=_map2[4];var festival=parseInt(festivalRef.current.value||0,10)*festivalMultiplier;var others=parseInt(otherTaxableRef.current.value||0,10);if(!basic){alert('Basic salary is zero. Add some data.');return;}/**\n         * As the payments are already converted to yearly,\n         * Change the max values to yearly as well.\n         */var _map3=[25000,10000,2500].map(function(i){return i*monthsRef.current.value;}),_map4=_slicedToArray(_map3,3),houseMax=_map4[0],medicalMax=_map4[1],conveyanceMax=_map4[2];var amounts={id:new Date().getTime(),name:values['company'],months:values['months'],festivals:values['festivals'],inputType:values['inputType'],basic:{yearly:basic,exempted:0,taxable:basic},house:{yearly:house,exempted:calculateMaxExemptionOf(basic,0.5,houseMax,house),taxable:calculateTaxableOf(basic,0.5,houseMax,house)},medical:{yearly:medical,exempted:calculateMaxExemptionOf(basic,0.1,medicalMax,medical),taxable:calculateTaxableOf(basic,0.1,medicalMax,medical)},conveyance:{yearly:conveyance,exempted:calculateMaxExemptionOf(basic,0,conveyanceMax,conveyance),taxable:calculateTaxableOf(basic,1,conveyanceMax,conveyance)},lfa:{yearly:lfa,exempted:lfa,taxable:0},festival:{yearly:festival,exempted:0,taxable:festival},others:{yearly:others,exempted:0,taxable:others}};amounts['gross']=amounts.festival.yearly+amounts.others.yearly+amounts.basic.yearly+amounts.house.yearly+amounts.medical.yearly+amounts.conveyance.yearly+amounts.lfa.yearly;amounts['net_exempted']=amounts.festival.exempted+amounts.others.exempted+amounts.basic.exempted+amounts.house.exempted+amounts.medical.exempted+amounts.conveyance.exempted+amounts.lfa.exempted;amounts['net_taxable']=amounts.festival.taxable+amounts.others.taxable+amounts.basic.taxable+amounts.house.taxable+amounts.medical.taxable+amounts.conveyance.taxable+amounts.lfa.taxable;props.handleInputChange(\"companies\",amounts);resetForms();};return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{xs:\"12\",children:/*#__PURE__*/_jsx(Form,{ref:companyInfoRef,onSubmit:function onSubmit(e){return e.preventDefault();},children:/*#__PURE__*/_jsxs(Form.Row,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"col-3\",children:[/*#__PURE__*/_jsx(Form.Control,{ref:companyNameRef,value:values['company'],onChange:function onChange(e){return handleChange('company',e.target.value.trim());},placeholder:\"Company name\"}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-info\",children:\"Company name\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"col-3\",children:[/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",value:values['months'],ref:monthsRef,onChange:function onChange(e){return handleChange('months',e.target.value);},placeholder:\"Months you've worked for\"}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-info\",children:\"Number of months\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"col-2\",children:[/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",value:values['festivals'],ref:totalFestivalsRef,onChange:function onChange(e){return handleChange('festivals',e.target.value);},placeholder:\"No of Festivals\"}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-info\",children:\"Number of festivals\"})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"col-4\",children:[/*#__PURE__*/_jsxs(Form.Control,{as:\"select\",ref:inputTypeRef,value:values['inputType'],onChange:function onChange(e){return handleChange('inputType',e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"monthly\",children:\"Calculate from Monthly\"}),/*#__PURE__*/_jsx(\"option\",{value:\"yearly\",children:\"Calculate for specified months\"})]}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-info\",children:\"Calculation type\"})]})]})})}),/*#__PURE__*/_jsx(Col,{xs:\"12\",style:{display:values['company']?'block':'none'},children:/*#__PURE__*/_jsxs(Form,{ref:salaryInputRef,onSubmit:function onSubmit(e){e.preventDefault();calculateTaxableAmount();},children:[/*#__PURE__*/_jsxs(Table,{size:\"sm\",children:[/*#__PURE__*/_jsxs(\"caption\",{children:[\"Earnings\",values['company']?\" at \\\"\".concat(values['company'],\"\\\"\"):'',\" - [\",values['months'],\" months] - [\",values['festivals'],\" festivals]\"]}),/*#__PURE__*/_jsx(\"thead\",{className:\"thead-dark\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"As\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Received (BDT.)\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Basic\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",className:\"form-control-sm\",ref:basicRef,placeholder:\"Basic pay\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"House rent\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",className:\"form-control-sm\",ref:houseRef,placeholder:\"House rent\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Medical Allowance\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",className:\"form-control-sm\",ref:medicalRef,placeholder:\"Medical Allowance\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Conveyance Allowance\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",className:\"form-control-sm\",ref:conveyanceRef,placeholder:\"Conveyance Allowance\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Leave Fare Assistance\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",ref:lfaRef,className:\"form-control-sm\",placeholder:\"LFA\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Festival Bonus\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",className:\"form-control-sm\",ref:festivalRef,placeholder:\"Festival Bonus\"})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Other Taxable Bonus\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",className:\"form-control-sm\",ref:otherTaxableRef,placeholder:\"Other total Taxable Bonus\"})})]})]})]}),/*#__PURE__*/_jsx(Button,{onClick:resetForms,variant:\"warning\",size:\"sm\",className:\"float-left\",children:\"Reset above data\"}),/*#__PURE__*/_jsxs(Button,{type:\"submit\",size:\"sm\",variant:\"primary\",className:\"float-right\",children:[\"Calculate \",values['company']?'for '+values['company']:'']})]})})]});}","map":{"version":3,"names":["Button","Col","Form","Row","Table","useRef","useState","jsx","_jsx","jsxs","_jsxs","SalaryInformation","props","_ref","companyNameRef","monthsRef","totalFestivalsRef","inputTypeRef","_ref2","companyInfoRef","salaryInputRef","_ref3","basicRef","houseRef","medicalRef","conveyanceRef","_ref4","lfaRef","festivalRef","otherTaxableRef","initialCompanyInfo","company","months","festivals","inputType","_useState","_useState2","_slicedToArray","values","setValues","handleChange","name","value","prevState","_objectSpread","_defineProperty","resetForms","current","reset","calculateTaxableOf","basic","percent","max","received","atMax","Math","min","calculateMaxExemptionOf","calculateTaxableAmount","alert","festivalMultiplier","basicMultiplier","_map","map","i","parseInt","_map2","house","medical","conveyance","lfa","festival","others","_map3","_map4","houseMax","medicalMax","conveyanceMax","amounts","id","Date","getTime","yearly","exempted","taxable","handleInputChange","children","xs","ref","onSubmit","e","preventDefault","Group","className","Control","onChange","target","trim","placeholder","Text","type","as","style","display","size","concat","onClick","variant"],"sources":["C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/src/SalaryInformation.js"],"sourcesContent":["import {Button, Col, Form, Row, Table} from \"react-bootstrap\";\nimport {useRef, useState} from \"react\";\n\nexport default function SalaryInformation(props) {\n    const [companyNameRef, monthsRef, totalFestivalsRef, inputTypeRef] = [useRef(), useRef(), useRef(), useRef()];\n    const [companyInfoRef, salaryInputRef] = [useRef(), useRef()];\n\n    const [basicRef, houseRef, medicalRef, conveyanceRef] = [useRef(), useRef(), useRef(), useRef()];\n    const [lfaRef, festivalRef, otherTaxableRef] = [useRef(), useRef(), useRef()];\n\n    const initialCompanyInfo = {\n        company: '',\n        months: 12,\n        festivals: 2,\n        inputType: 'monthly'\n    };\n    const [values, setValues] = useState(initialCompanyInfo);\n\n    const handleChange = (name, value) => {\n        setValues(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    const resetForms = () => {\n        salaryInputRef.current.reset();\n        // for some reasons, company info refs were not working. IDK\n        setValues({...initialCompanyInfo});\n    }\n\n    const calculateTaxableOf = (basic, percent, max, received) => {\n        const atMax = percent ? Math.min(basic * percent, max) : max;\n        return received > atMax ? received - atMax : 0;\n    }\n\n    const calculateMaxExemptionOf = (basic, percent, max, received) => {\n        const atMax = percent ? Math.min(basic * percent, max) : max;\n        return received > atMax ? atMax : received;\n    }\n\n    const calculateTaxableAmount = () => {\n\n        if (!values['company']) {\n            alert('Add a company name.');\n            return false;\n        }\n\n        let festivalMultiplier = 1;\n        let basicMultiplier = 1;\n        if (values['inputType'] === 'monthly') {\n            festivalMultiplier = values['festivals'];\n            basicMultiplier = values['months'];\n        }\n\n        // already converted to yearly\n        const [basic, house, medical, conveyance, lfa] = [\n            basicRef,\n            houseRef,\n            medicalRef,\n            conveyanceRef,\n            lfaRef,\n        ].map((i) => parseInt(i.current.value || 0, 10) * basicMultiplier);\n        const festival = parseInt(festivalRef.current.value || 0, 10) * festivalMultiplier;\n        const others = parseInt(otherTaxableRef.current.value || 0, 10);\n\n        if (!basic) {\n            alert('Basic salary is zero. Add some data.');\n            return;\n        }\n\n        /**\n         * As the payments are already converted to yearly,\n         * Change the max values to yearly as well.\n         */\n        const [houseMax, medicalMax, conveyanceMax] = [25000, 10000, 2500].map(i => i * monthsRef.current.value);\n\n        const amounts = {\n            id: new Date().getTime(),\n            name: values['company'],\n            months: values['months'],\n            festivals: values['festivals'],\n            inputType: values['inputType'],\n            basic: {\n                yearly: basic,\n                exempted: 0,\n                taxable: basic,\n            },\n            house: {\n                yearly: house,\n                exempted: calculateMaxExemptionOf(basic, 0.5, houseMax, house),\n                taxable: calculateTaxableOf(basic, 0.5, houseMax, house),\n            },\n            medical: {\n                yearly: medical,\n                exempted: calculateMaxExemptionOf(basic, 0.1, medicalMax, medical),\n                taxable: calculateTaxableOf(basic, 0.1, medicalMax, medical),\n            },\n            conveyance: {\n                yearly: conveyance,\n                exempted: calculateMaxExemptionOf(basic, 0, conveyanceMax, conveyance),\n                taxable: calculateTaxableOf(basic, 1, conveyanceMax, conveyance),\n            },\n            lfa: {\n                yearly: lfa,\n                exempted: lfa,\n                taxable: 0,\n            },\n            festival: {\n                yearly: festival,\n                exempted: 0,\n                taxable: festival,\n            },\n            others: {\n                yearly: others,\n                exempted: 0,\n                taxable: others\n            },\n        }\n\n\n        amounts['gross'] = amounts.festival.yearly + amounts.others.yearly +\n            amounts.basic.yearly + amounts.house.yearly +\n            amounts.medical.yearly + amounts.conveyance.yearly + amounts.lfa.yearly;\n\n        amounts['net_exempted'] = amounts.festival.exempted + amounts.others.exempted +\n            amounts.basic.exempted + amounts.house.exempted +\n            amounts.medical.exempted + amounts.conveyance.exempted + amounts.lfa.exempted;\n\n        amounts['net_taxable'] = amounts.festival.taxable + amounts.others.taxable +\n            amounts.basic.taxable + amounts.house.taxable +\n            amounts.medical.taxable + amounts.conveyance.taxable + amounts.lfa.taxable;\n\n        props.handleInputChange(\"companies\", amounts);\n        resetForms();\n    }\n\n    return <Row>\n        <Col xs=\"12\">\n            {/*COMPANY INFORMATION FORM*/}\n            <Form ref={companyInfoRef} onSubmit={e => e.preventDefault()}>\n                <Form.Row>\n                    <Form.Group className=\"col-3\">\n                        <Form.Control ref={companyNameRef} value={values['company']}\n                                      onChange={(e) => handleChange('company', e.target.value.trim())}\n                                      placeholder=\"Company name\"/>\n                        <Form.Text className=\"text-info\">\n                            Company name\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-3\">\n                        <Form.Control type=\"number\" min=\"0\" value={values['months']} ref={monthsRef}\n                                      onChange={(e) => handleChange('months', e.target.value)}\n                                      placeholder=\"Months you've worked for\"/>\n                        <Form.Text className=\"text-info\">\n                            Number of months\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-2\">\n                        <Form.Control type=\"number\" min=\"0\" value={values['festivals']} ref={totalFestivalsRef}\n                                      onChange={(e) => handleChange('festivals', e.target.value)}\n                                      placeholder=\"No of Festivals\"/>\n                        <Form.Text className=\"text-info\">\n                            Number of festivals\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-4\">\n                        <Form.Control as=\"select\" ref={inputTypeRef} value={values['inputType']}\n                                      onChange={(e) => handleChange('inputType', e.target.value)}>\n                            <option value=\"monthly\">Calculate from Monthly</option>\n                            <option value=\"yearly\">Calculate for specified months</option>\n                        </Form.Control>\n                        <Form.Text className=\"text-info\">\n                            Calculation type\n                        </Form.Text>\n                    </Form.Group>\n                </Form.Row>\n            </Form>\n        </Col>\n        {/* Salary Information */}\n        <Col xs=\"12\" style={{display: values['company'] ? 'block' : 'none'}}>\n            <Form ref={salaryInputRef} onSubmit={e => {\n                e.preventDefault();\n                calculateTaxableAmount();\n            }}>\n                <Table size=\"sm\">\n                    <caption>\n                        Earnings\n                        {values['company'] ? ` at \"${values['company']}\"` : ''} -\n                        [{values['months']} months] -\n                        [{values['festivals']} festivals]\n                    </caption>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>As</th>\n                            <th>Received (BDT.)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Basic</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={basicRef} placeholder=\"Basic pay\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>House rent</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={houseRef} placeholder=\"House rent\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Medical Allowance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={medicalRef} placeholder=\"Medical Allowance\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Conveyance Allowance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={conveyanceRef} placeholder=\"Conveyance Allowance\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Leave Fare Assistance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" ref={lfaRef} className=\"form-control-sm\"\n                                              placeholder=\"LFA\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Festival Bonus</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={festivalRef} placeholder=\"Festival Bonus\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Other Taxable Bonus</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={otherTaxableRef} placeholder=\"Other total Taxable Bonus\"/>\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n\n                <Button onClick={resetForms} variant=\"warning\" size=\"sm\" className=\"float-left\">\n                    Reset above data\n                </Button>\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" className=\"float-right\">\n                    Calculate {values['company'] ? 'for ' + values['company'] : ''}\n                </Button>\n            </Form>\n        </Col>\n    </Row>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}