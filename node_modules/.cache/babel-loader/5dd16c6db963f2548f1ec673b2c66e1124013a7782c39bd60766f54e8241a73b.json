{"ast":null,"code":"import _defineProperty from\"C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Col,Form,Row,Table}from\"react-bootstrap\";import{useRef,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function RightSideContent(props){var _props$values=props.values,minimumTax=_props$values.minimumTax,lowerBound=_props$values.lowerBound,companies=_props$values.companies;var _ref=[useRef(),useRef()],aitRef=_ref[0],investmentRef=_ref[1];var _useState=useState({ait:0,investment:0}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var handleChange=function handleChange(name,value){value=parseInt(value||0,10);setValues(function(prevState){return _objectSpread(_objectSpread({},prevState),{},_defineProperty({},name,value));});};var totalTaxableAmount=function totalTaxableAmount(){return companies.reduce(function(p,c){return p+c.net_taxable;},0);};var investmentSlabs=function investmentSlabs(taxableIncome){var slabs=[];if(taxableIncome>3000000){slabs.push([.15,250000]);slabs.push([.12,500000]);slabs.push([.1]);}else if(taxableIncome>1000000){slabs.push([.15,250000]);slabs.push([.12]);}else{slabs.push([.15]);}return slabs;};var maxAllowedInvestment=function maxAllowedInvestment(){return Math.min(.25*totalTaxableAmount(),15000000,values['investment']);// max can be 1.5Crore\n};var maxInvestmentRebate=function maxInvestmentRebate(){if(!values['investment']){return 0;}var taxableIncome=totalTaxableAmount();if(!taxableIncome){return 0;}var slabs=investmentSlabs(taxableIncome);var rebate=0;var investment=maxAllowedInvestment();for(var i=0;i<slabs.length;++i){var _slabs$i$;var percent=slabs[i][0];var upperBound=(_slabs$i$=slabs[i][1])!==null&&_slabs$i$!==void 0?_slabs$i$:investment;if(upperBound>investment){upperBound=investment;investment=0;}else{investment-=upperBound;}rebate=rebate+upperBound*percent;if(investment===0){break;}}return rebate;};var taxBreakdown=function taxBreakdown(){var breakdown={gross:0,slabs:[{next:lowerBound,text:'From 0 to '+lowerBound,as:'0%',percent:0,remains:0,tax:0},{next:100000,text:'For remaining next '+100000,as:'5%',percent:0.05,remains:0,tax:0},{next:300000,text:'For remaining next 300000',as:'10%',percent:0.1,remains:0,tax:0},{next:400000,text:'For remaining next 400000',as:'15%',percent:0.15,remains:0,tax:0},{next:500000,text:'For remaining next '+500000,as:'20%',percent:0.2,remains:0,tax:0},{next:undefined,text:'For remaining everything else',as:'25%',percent:0.25,remains:0,tax:0}]};var gross=0,taxable=totalTaxableAmount();if(!taxable){return breakdown;}if(taxable<lowerBound){return breakdown;}for(var i=0;i<breakdown['slabs'].length;++i){// get the current slab\nvar current=breakdown['slabs'][i];// get the upper bound of this slab\nvar limit=current['next'];// if no upper bound is defined, then remaining taxable is the upper bound\nif(limit===undefined){limit=taxable;}// taxable reached the maximum limit\nif(taxable<=limit){limit=taxable;taxable=0;}else{taxable-=limit;}var thisSlab=current['percent']*limit;breakdown['slabs'][i].tax=thisSlab;breakdown['slabs'][i].remains=taxable;gross+=thisSlab;}breakdown.gross=gross&&gross<minimumTax?minimumTax:gross;return breakdown;};var rebate=maxInvestmentRebate();var netTaxableAmount=totalTaxableAmount();var maxInvestment=maxAllowedInvestment();var breakdown=taxBreakdown();var finalLiability=breakdown['gross']-(breakdown['gross']?rebate:0)-(breakdown['gross']?values['ait']:0);if(finalLiability<0){finalLiability=0;}return/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{xs:\"12\",children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",className:\"form-control-sm\",onChange:function onChange(){return handleChange('ait',aitRef.current.value);},value:values['ait'],ref:aitRef,placeholder:\"Processed AIT by Company\"}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-info\",children:\"Advance Income Tax [Deducted by Company]\"})]}),/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Control,{type:\"number\",min:\"0\",className:\"form-control-sm\",onChange:function onChange(){return handleChange('investment',investmentRef.current.value);},value:values['investment'],ref:investmentRef,placeholder:\"Total allowable Investment\"}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-info\",children:\"Allowable total investment\"})]}),/*#__PURE__*/_jsx(Table,{size:\"sm\",children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Minimum tax\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:minimumTax})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Minimum taxable income\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:lowerBound})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"AIT\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:values['ait']})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Total investment\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:values['investment']})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Max allowed investment\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:maxInvestment})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Total taxable income\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:netTaxableAmount})})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:\"Rebate from investment\"}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:rebate})})]})]})}),/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(\"p\",{className:\"text-secondary text-center\",children:\"Tax breakdown\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(Table,{size:\"sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Total Income\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Percentage\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Calculated Tax\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Remaining\"})]})}),/*#__PURE__*/_jsxs(\"tbody\",{children:[breakdown.slabs.map(function(slab,k){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:slab.text}),/*#__PURE__*/_jsx(\"td\",{className:\"text-center\",children:slab.as}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right\",children:slab.tax}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right\",children:slab.remains})]},k);}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Minimum/Gross Tax\"})}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right\",children:/*#__PURE__*/_jsx(\"b\",{children:breakdown['gross']})}),/*#__PURE__*/_jsx(\"td\",{})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Investment rebate\"})}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"b\",{children:[\" - \",breakdown['gross']?rebate:0]})}),/*#__PURE__*/_jsx(\"td\",{})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"AIT deduction\"})}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"b\",{children:[\" - \",values['ait']]})}),/*#__PURE__*/_jsx(\"td\",{})]}),/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Net Tax liability\"})}),/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{className:\"text-right\",children:/*#__PURE__*/_jsxs(\"b\",{children:[\" = \",finalLiability]})}),/*#__PURE__*/_jsx(\"td\",{})]})]})]})})]})});}","map":{"version":3,"names":["Col","Form","Row","Table","useRef","useState","jsx","_jsx","jsxs","_jsxs","RightSideContent","props","_props$values","values","minimumTax","lowerBound","companies","_ref","aitRef","investmentRef","_useState","ait","investment","_useState2","_slicedToArray","setValues","handleChange","name","value","parseInt","prevState","_objectSpread","_defineProperty","totalTaxableAmount","reduce","p","c","net_taxable","investmentSlabs","taxableIncome","slabs","push","maxAllowedInvestment","Math","min","maxInvestmentRebate","rebate","i","length","_slabs$i$","percent","upperBound","taxBreakdown","breakdown","gross","next","text","as","remains","tax","undefined","taxable","current","limit","thisSlab","netTaxableAmount","maxInvestment","finalLiability","children","xs","Group","Control","type","className","onChange","ref","placeholder","Text","size","map","slab","k"],"sources":["C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/src/RightSideContent.js"],"sourcesContent":["import {Col, Form, Row, Table} from \"react-bootstrap\";\nimport {useRef, useState} from \"react\";\n\nexport default function RightSideContent(props) {\n    const {minimumTax, lowerBound, companies} = props.values;\n\n    const [aitRef, investmentRef] = [useRef(), useRef()];\n\n    const [values, setValues] = useState({\n        ait: 0,\n        investment: 0,\n    });\n\n\n    const handleChange = (name, value) => {\n        value = parseInt(value || 0, 10);\n\n        setValues(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    const totalTaxableAmount = () => {\n        return companies.reduce((p, c) => p + c.net_taxable, 0);\n    }\n\n    const investmentSlabs = (taxableIncome) => {\n        const slabs = [];\n        if (taxableIncome > 3000000) {\n            slabs.push([.15, 250000]);\n            slabs.push([.12, 500000]);\n            slabs.push([.1]);\n        } else if (taxableIncome > 1000000) {\n            slabs.push([.15, 250000]);\n            slabs.push([.12]);\n        } else {\n            slabs.push([.15]);\n        }\n\n        return slabs;\n    }\n\n    const maxAllowedInvestment = () => {\n        return Math.min(.25 * totalTaxableAmount(), 15000000, values['investment']); // max can be 1.5Crore\n    }\n\n    const maxInvestmentRebate = () => {\n        if (!values['investment']) {\n            return 0;\n        }\n\n        const taxableIncome = totalTaxableAmount();\n        if (!taxableIncome) {\n            return 0;\n        }\n\n        const slabs = investmentSlabs(taxableIncome);\n        let rebate = 0;\n        let investment = maxAllowedInvestment();\n\n        for (let i = 0; i < slabs.length; ++i) {\n            let percent = slabs[i][0];\n            let upperBound = slabs[i][1] ?? investment;\n            if (upperBound > investment) {\n                upperBound = investment;\n                investment = 0;\n            } else {\n                investment -= upperBound;\n            }\n\n            rebate = rebate + upperBound * percent;\n            if (investment === 0) {\n                break;\n            }\n        }\n\n        return rebate;\n    }\n\n    const taxBreakdown = () => {\n        let breakdown = {\n            gross: 0,\n            slabs: [\n                {\n                    next: lowerBound,\n                    text: 'From 0 to ' + lowerBound,\n                    as: '0%',\n                    percent: 0,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: 100000,\n                    text: 'For remaining next ' + 100000,\n                    as: '5%',\n                    percent: 0.05,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: 300000,\n                    text: 'For remaining next 300000',\n                    as: '10%',\n                    percent: 0.1,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: 400000,\n                    text: 'For remaining next 400000',\n                    as: '15%',\n                    percent: 0.15,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: 500000,\n                    text: 'For remaining next ' + 500000,\n                    as: '20%',\n                    percent: 0.2,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: undefined,\n                    text: 'For remaining everything else',\n                    as: '25%',\n                    percent: 0.25,\n                    remains: 0,\n                    tax: 0,\n                }\n            ]\n        };\n\n        let gross = 0, taxable = totalTaxableAmount();\n        if (!taxable) {\n            return breakdown;\n        }\n\n        if (taxable < lowerBound) {\n            return breakdown;\n        }\n\n        for (let i = 0; i < breakdown['slabs'].length; ++i) {\n            // get the current slab\n            let current = breakdown['slabs'][i];\n            // get the upper bound of this slab\n            let limit = current['next'];\n            // if no upper bound is defined, then remaining taxable is the upper bound\n            if (limit === undefined) {\n                limit = taxable;\n            }\n\n            // taxable reached the maximum limit\n            if (taxable <= limit) {\n                limit = taxable;\n                taxable = 0;\n            } else {\n                taxable -= limit;\n            }\n\n            let thisSlab = current['percent'] * limit;\n            breakdown['slabs'][i].tax = thisSlab;\n            breakdown['slabs'][i].remains = taxable;\n            gross += thisSlab;\n        }\n\n        breakdown.gross = gross && gross < minimumTax ? minimumTax : gross;\n\n        return breakdown;\n    }\n\n    const rebate = maxInvestmentRebate();\n\n    const netTaxableAmount = totalTaxableAmount();\n\n    const maxInvestment = maxAllowedInvestment();\n\n    const breakdown = taxBreakdown();\n\n    let finalLiability = breakdown['gross'] - (breakdown['gross'] ? rebate : 0) - (breakdown['gross'] ? values['ait'] : 0);\n    if (finalLiability < 0) {\n        finalLiability = 0;\n    }\n\n    return <Row>\n        <Col xs=\"12\">\n            <Form.Group>\n                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                              onChange={() => handleChange('ait', aitRef.current.value)}\n                              value={values['ait']} ref={aitRef} placeholder=\"Processed AIT by Company\"/>\n                <Form.Text className=\"text-info\">\n                    Advance Income Tax [Deducted by Company]\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                              onChange={() => handleChange('investment', investmentRef.current.value)}\n                              value={values['investment']} ref={investmentRef}\n                              placeholder=\"Total allowable Investment\"/>\n                <Form.Text className=\"text-info\">\n                    Allowable total investment\n                </Form.Text>\n            </Form.Group>\n\n            <Table size=\"sm\">\n                <tbody>\n                    <tr>\n                        <td>Minimum tax</td>\n                        <td><b>{minimumTax}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Minimum taxable income</td>\n                        <td><b>{lowerBound}</b></td>\n                    </tr>\n                    <tr>\n                        <td>AIT</td>\n                        <td><b>{values['ait']}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Total investment</td>\n                        <td><b>{values['investment']}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Max allowed investment</td>\n                        <td><b>{maxInvestment}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Total taxable income</td>\n                        <td><b>{netTaxableAmount}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Rebate from investment</td>\n                        <td><b>{rebate}</b></td>\n                    </tr>\n                </tbody>\n            </Table>\n            <hr/>\n            <p className='text-secondary text-center'>Tax breakdown</p>\n            <div className=\"table-responsive\">\n                <Table size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Total Income</th>\n                            <th>Percentage</th>\n                            <th>Calculated Tax</th>\n                            <th>Remaining</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            breakdown.slabs.map((slab, k) => {\n                                return <tr key={k}>\n                                    <td>{slab.text}</td>\n                                    <td className=\"text-center\">{slab.as}</td>\n                                    <td className=\"text-right\">{slab.tax}</td>\n                                    <td className=\"text-right\">{slab.remains}</td>\n                                </tr>\n                            })\n                        }\n                        <tr>\n                            <td><b>Minimum/Gross Tax</b></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <b>{breakdown['gross']}</b>\n                            </td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td><b>Investment rebate</b></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <b> - {breakdown['gross'] ? rebate : 0}</b>\n                            </td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td><b>AIT deduction</b></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <b> - {values['ait']}</b>\n                            </td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td><b>Net Tax liability</b></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <b> = {finalLiability}</b>\n                            </td>\n                            <td></td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </div>\n        </Col>\n    </Row>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}