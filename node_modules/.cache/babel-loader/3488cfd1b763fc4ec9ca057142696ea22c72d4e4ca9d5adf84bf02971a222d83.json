{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abid\\\\Downloads\\\\bd-income-tax-calculator-master\\\\bd-income-tax-calculator-master\\\\src\\\\RightSideContent.js\",\n  _s = $RefreshSig$();\nimport { Col, Form, Row, Table } from \"react-bootstrap\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RightSideContent(props) {\n  _s();\n  const {\n    minimumTax,\n    lowerBound,\n    companies\n  } = props.values;\n  const [aitRef, investmentRef] = [useRef(), useRef()];\n  const [values, setValues] = useState({\n    ait: 0,\n    investment: 0\n  });\n  const handleChange = (name, value) => {\n    value = parseInt(value || 0, 10);\n    setValues(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const totalTaxableAmount = () => {\n    return companies.reduce((p, c) => p + c.net_taxable, 0);\n  };\n  const investmentSlabs = taxableIncome => {\n    const slabs = [];\n    if (taxableIncome > 3000000) {\n      slabs.push([.15, 250000]);\n      slabs.push([.12, 500000]);\n      slabs.push([.1]);\n    } else if (taxableIncome > 1000000) {\n      slabs.push([.15, 250000]);\n      slabs.push([.12]);\n    } else {\n      slabs.push([.15]);\n    }\n    return slabs;\n  };\n  const maxAllowedInvestment = () => {\n    return Math.min(.25 * totalTaxableAmount(), 15000000, values['investment']); // max can be 1.5Crore\n  };\n\n  const maxInvestmentRebate = () => {\n    if (!values['investment']) {\n      return 0;\n    }\n    const taxableIncome = totalTaxableAmount();\n    if (!taxableIncome) {\n      return 0;\n    }\n    const slabs = investmentSlabs(taxableIncome);\n    let rebate = 0;\n    let investment = maxAllowedInvestment();\n    for (let i = 0; i < slabs.length; ++i) {\n      var _slabs$i$;\n      let percent = slabs[i][0];\n      let upperBound = (_slabs$i$ = slabs[i][1]) !== null && _slabs$i$ !== void 0 ? _slabs$i$ : investment;\n      if (upperBound > investment) {\n        upperBound = investment;\n        investment = 0;\n      } else {\n        investment -= upperBound;\n      }\n      rebate = rebate + upperBound * percent;\n      if (investment === 0) {\n        break;\n      }\n    }\n    return rebate;\n  };\n  const taxBreakdown = () => {\n    let breakdown = {\n      gross: 0,\n      slabs: [{\n        next: lowerBound,\n        text: 'From 0 to ' + lowerBound,\n        as: '0%',\n        percent: 0,\n        remains: 0,\n        tax: 0\n      }, {\n        next: 100000,\n        text: 'For remaining next ' + 100000,\n        as: '5%',\n        percent: 0.05,\n        remains: 0,\n        tax: 0\n      }, {\n        next: 300000,\n        text: 'For remaining next 300000',\n        as: '10%',\n        percent: 0.1,\n        remains: 0,\n        tax: 0\n      }, {\n        next: 400000,\n        text: 'For remaining next 400000',\n        as: '15%',\n        percent: 0.15,\n        remains: 0,\n        tax: 0\n      }, {\n        next: 500000,\n        text: 'For remaining next ' + 500000,\n        as: '20%',\n        percent: 0.2,\n        remains: 0,\n        tax: 0\n      }, {\n        next: undefined,\n        text: 'For remaining everything else',\n        as: '25%',\n        percent: 0.25,\n        remains: 0,\n        tax: 0\n      }]\n    };\n    let gross = 0,\n      taxable = totalTaxableAmount();\n    if (!taxable) {\n      return breakdown;\n    }\n    if (taxable < lowerBound) {\n      return breakdown;\n    }\n    for (let i = 0; i < breakdown['slabs'].length; ++i) {\n      // get the current slab\n      let current = breakdown['slabs'][i];\n      // get the upper bound of this slab\n      let limit = current['next'];\n      // if no upper bound is defined, then remaining taxable is the upper bound\n      if (limit === undefined) {\n        limit = taxable;\n      }\n\n      // taxable reached the maximum limit\n      if (taxable <= limit) {\n        limit = taxable;\n        taxable = 0;\n      } else {\n        taxable -= limit;\n      }\n      let thisSlab = current['percent'] * limit;\n      breakdown['slabs'][i].tax = thisSlab;\n      breakdown['slabs'][i].remains = taxable;\n      gross += thisSlab;\n    }\n    breakdown.gross = gross && gross < minimumTax ? minimumTax : gross;\n    return breakdown;\n  };\n  const rebate = maxInvestmentRebate();\n  const netTaxableAmount = totalTaxableAmount();\n  const maxInvestment = maxAllowedInvestment();\n  const breakdown = taxBreakdown();\n  let finalLiability = breakdown['gross'] - (breakdown['gross'] ? rebate : 0) - (breakdown['gross'] ? values['ait'] : 0);\n  if (finalLiability < 0) {\n    finalLiability = 0;\n  }\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      xs: \"12\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          min: \"0\",\n          className: \"form-control-sm\",\n          onChange: () => handleChange('ait', aitRef.current.value),\n          value: values['ait'],\n          ref: aitRef,\n          placeholder: \"Processed AIT by Company\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-info\",\n          children: \"Advance Income Tax [Deducted by Company]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          min: \"0\",\n          className: \"form-control-sm\",\n          onChange: () => handleChange('investment', investmentRef.current.value),\n          value: values['investment'],\n          ref: investmentRef,\n          placeholder: \"Total allowable Investment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-info\",\n          children: \"Allowable total investment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"sm\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Minimum tax\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: minimumTax\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Minimum taxable income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: lowerBound\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"AIT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: values['ait']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total investment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: values['investment']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Max allowed investment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: maxInvestment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Total taxable income\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: netTaxableAmount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Rebate from investment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: rebate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-secondary text-center\",\n        children: \"Tax breakdown\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-responsive\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Total Income\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Percentage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Calculated Tax\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Remaining\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [breakdown.slabs.map((slab, k) => {\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: slab.text\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-center\",\n                  children: slab.as\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-right\",\n                  children: slab.tax\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"text-right\",\n                  children: slab.remains\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 37\n                }, this)]\n              }, k, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 40\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Minimum/Gross Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: breakdown['gross']\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Investment rebate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\" - \", breakdown['gross'] ? rebate : 0]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"AIT deduction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\" - \", values['ait']]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: \"Net Tax liability\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"text-right\",\n                children: /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: [\" = \", finalLiability]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 12\n  }, this);\n}\n_s(RightSideContent, \"GgUcVloSW72eoUozW4A4Xb5U8OU=\");\n_c = RightSideContent;\nvar _c;\n$RefreshReg$(_c, \"RightSideContent\");","map":{"version":3,"names":["Col","Form","Row","Table","useRef","useState","jsxDEV","_jsxDEV","RightSideContent","props","_s","minimumTax","lowerBound","companies","values","aitRef","investmentRef","setValues","ait","investment","handleChange","name","value","parseInt","prevState","totalTaxableAmount","reduce","p","c","net_taxable","investmentSlabs","taxableIncome","slabs","push","maxAllowedInvestment","Math","min","maxInvestmentRebate","rebate","i","length","_slabs$i$","percent","upperBound","taxBreakdown","breakdown","gross","next","text","as","remains","tax","undefined","taxable","current","limit","thisSlab","netTaxableAmount","maxInvestment","finalLiability","children","xs","Group","Control","type","className","onChange","ref","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Text","size","map","slab","k","_c","$RefreshReg$"],"sources":["C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/src/RightSideContent.js"],"sourcesContent":["import {Col, Form, Row, Table} from \"react-bootstrap\";\nimport {useRef, useState} from \"react\";\n\nexport default function RightSideContent(props) {\n    const {minimumTax, lowerBound, companies} = props.values;\n\n    const [aitRef, investmentRef] = [useRef(), useRef()];\n\n    const [values, setValues] = useState({\n        ait: 0,\n        investment: 0,\n    });\n\n\n    const handleChange = (name, value) => {\n        value = parseInt(value || 0, 10);\n\n        setValues(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    const totalTaxableAmount = () => {\n        return companies.reduce((p, c) => p + c.net_taxable, 0);\n    }\n\n    const investmentSlabs = (taxableIncome) => {\n        const slabs = [];\n        if (taxableIncome > 3000000) {\n            slabs.push([.15, 250000]);\n            slabs.push([.12, 500000]);\n            slabs.push([.1]);\n        } else if (taxableIncome > 1000000) {\n            slabs.push([.15, 250000]);\n            slabs.push([.12]);\n        } else {\n            slabs.push([.15]);\n        }\n\n        return slabs;\n    }\n\n    const maxAllowedInvestment = () => {\n        return Math.min(.25 * totalTaxableAmount(), 15000000, values['investment']); // max can be 1.5Crore\n    }\n\n    const maxInvestmentRebate = () => {\n        if (!values['investment']) {\n            return 0;\n        }\n\n        const taxableIncome = totalTaxableAmount();\n        if (!taxableIncome) {\n            return 0;\n        }\n\n        const slabs = investmentSlabs(taxableIncome);\n        let rebate = 0;\n        let investment = maxAllowedInvestment();\n\n        for (let i = 0; i < slabs.length; ++i) {\n            let percent = slabs[i][0];\n            let upperBound = slabs[i][1] ?? investment;\n            if (upperBound > investment) {\n                upperBound = investment;\n                investment = 0;\n            } else {\n                investment -= upperBound;\n            }\n\n            rebate = rebate + upperBound * percent;\n            if (investment === 0) {\n                break;\n            }\n        }\n\n        return rebate;\n    }\n\n    const taxBreakdown = () => {\n        let breakdown = {\n            gross: 0,\n            slabs: [\n                {\n                    next: lowerBound,\n                    text: 'From 0 to ' + lowerBound,\n                    as: '0%',\n                    percent: 0,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: 100000,\n                    text: 'For remaining next ' + 100000,\n                    as: '5%',\n                    percent: 0.05,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: 300000,\n                    text: 'For remaining next 300000',\n                    as: '10%',\n                    percent: 0.1,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: 400000,\n                    text: 'For remaining next 400000',\n                    as: '15%',\n                    percent: 0.15,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: 500000,\n                    text: 'For remaining next ' + 500000,\n                    as: '20%',\n                    percent: 0.2,\n                    remains: 0,\n                    tax: 0,\n                }, {\n                    next: undefined,\n                    text: 'For remaining everything else',\n                    as: '25%',\n                    percent: 0.25,\n                    remains: 0,\n                    tax: 0,\n                }\n            ]\n        };\n\n        let gross = 0, taxable = totalTaxableAmount();\n        if (!taxable) {\n            return breakdown;\n        }\n\n        if (taxable < lowerBound) {\n            return breakdown;\n        }\n\n        for (let i = 0; i < breakdown['slabs'].length; ++i) {\n            // get the current slab\n            let current = breakdown['slabs'][i];\n            // get the upper bound of this slab\n            let limit = current['next'];\n            // if no upper bound is defined, then remaining taxable is the upper bound\n            if (limit === undefined) {\n                limit = taxable;\n            }\n\n            // taxable reached the maximum limit\n            if (taxable <= limit) {\n                limit = taxable;\n                taxable = 0;\n            } else {\n                taxable -= limit;\n            }\n\n            let thisSlab = current['percent'] * limit;\n            breakdown['slabs'][i].tax = thisSlab;\n            breakdown['slabs'][i].remains = taxable;\n            gross += thisSlab;\n        }\n\n        breakdown.gross = gross && gross < minimumTax ? minimumTax : gross;\n\n        return breakdown;\n    }\n\n    const rebate = maxInvestmentRebate();\n\n    const netTaxableAmount = totalTaxableAmount();\n\n    const maxInvestment = maxAllowedInvestment();\n\n    const breakdown = taxBreakdown();\n\n    let finalLiability = breakdown['gross'] - (breakdown['gross'] ? rebate : 0) - (breakdown['gross'] ? values['ait'] : 0);\n    if (finalLiability < 0) {\n        finalLiability = 0;\n    }\n\n    return <Row>\n        <Col xs=\"12\">\n            <Form.Group>\n                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                              onChange={() => handleChange('ait', aitRef.current.value)}\n                              value={values['ait']} ref={aitRef} placeholder=\"Processed AIT by Company\"/>\n                <Form.Text className=\"text-info\">\n                    Advance Income Tax [Deducted by Company]\n                </Form.Text>\n            </Form.Group>\n\n            <Form.Group>\n                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                              onChange={() => handleChange('investment', investmentRef.current.value)}\n                              value={values['investment']} ref={investmentRef}\n                              placeholder=\"Total allowable Investment\"/>\n                <Form.Text className=\"text-info\">\n                    Allowable total investment\n                </Form.Text>\n            </Form.Group>\n\n            <Table size=\"sm\">\n                <tbody>\n                    <tr>\n                        <td>Minimum tax</td>\n                        <td><b>{minimumTax}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Minimum taxable income</td>\n                        <td><b>{lowerBound}</b></td>\n                    </tr>\n                    <tr>\n                        <td>AIT</td>\n                        <td><b>{values['ait']}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Total investment</td>\n                        <td><b>{values['investment']}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Max allowed investment</td>\n                        <td><b>{maxInvestment}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Total taxable income</td>\n                        <td><b>{netTaxableAmount}</b></td>\n                    </tr>\n                    <tr>\n                        <td>Rebate from investment</td>\n                        <td><b>{rebate}</b></td>\n                    </tr>\n                </tbody>\n            </Table>\n            <hr/>\n            <p className='text-secondary text-center'>Tax breakdown</p>\n            <div className=\"table-responsive\">\n                <Table size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>Total Income</th>\n                            <th>Percentage</th>\n                            <th>Calculated Tax</th>\n                            <th>Remaining</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            breakdown.slabs.map((slab, k) => {\n                                return <tr key={k}>\n                                    <td>{slab.text}</td>\n                                    <td className=\"text-center\">{slab.as}</td>\n                                    <td className=\"text-right\">{slab.tax}</td>\n                                    <td className=\"text-right\">{slab.remains}</td>\n                                </tr>\n                            })\n                        }\n                        <tr>\n                            <td><b>Minimum/Gross Tax</b></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <b>{breakdown['gross']}</b>\n                            </td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td><b>Investment rebate</b></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <b> - {breakdown['gross'] ? rebate : 0}</b>\n                            </td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td><b>AIT deduction</b></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <b> - {values['ait']}</b>\n                            </td>\n                            <td></td>\n                        </tr>\n                        <tr>\n                            <td><b>Net Tax liability</b></td>\n                            <td></td>\n                            <td className=\"text-right\">\n                                <b> = {finalLiability}</b>\n                            </td>\n                            <td></td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </div>\n        </Col>\n    </Row>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}