{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abid\\\\Downloads\\\\bd-income-tax-calculator-master\\\\bd-income-tax-calculator-master\\\\src\\\\SalaryInformation.js\",\n  _s = $RefreshSig$();\nimport { Button, Col, Form, Row, Table } from \"react-bootstrap\";\nimport { useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SalaryInformation(props) {\n  _s();\n  const [companyNameRef, monthsRef, totalFestivalsRef, inputTypeRef] = [useRef(), useRef(), useRef(), useRef()];\n  const [companyInfoRef, salaryInputRef] = [useRef(), useRef()];\n  const [basicRef, houseRef, medicalRef, conveyanceRef] = [useRef(), useRef(), useRef(), useRef()];\n  const [lfaRef, festivalRef, otherTaxableRef] = [useRef(), useRef(), useRef()];\n  const initialCompanyInfo = {\n    company: '',\n    months: 12,\n    festivals: 2,\n    inputType: 'monthly'\n  };\n  const [values, setValues] = useState(initialCompanyInfo);\n  const handleChange = (name, value) => {\n    setValues(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const resetForms = () => {\n    salaryInputRef.current.reset();\n    // for some reasons, company info refs were not working. IDK\n    setValues({\n      ...initialCompanyInfo\n    });\n  };\n  const calculateTaxableOf = (basic, percent, max, received) => {\n    const atMax = percent ? Math.min(basic * percent, max) : max;\n    return received > atMax ? received - atMax : 0;\n  };\n  const calculateMaxExemptionOf = (basic, percent, max, received) => {\n    const atMax = percent ? Math.min(basic * percent, max) : max;\n    return received > atMax ? atMax : received;\n  };\n  const calculateTaxableAmount = () => {\n    if (!values['company']) {\n      alert('Add a company name.');\n      return false;\n    }\n    let festivalMultiplier = 1;\n    let basicMultiplier = 1;\n    if (values['inputType'] === 'monthly') {\n      festivalMultiplier = values['festivals'];\n      basicMultiplier = values['months'];\n    }\n\n    // already converted to yearly\n    const [basic, house, medical, conveyance, lfa] = [basicRef, houseRef, medicalRef, conveyanceRef, lfaRef].map(i => parseInt(i.current.value || 0, 10) * basicMultiplier);\n    const festival = parseInt(festivalRef.current.value || 0, 10) * festivalMultiplier;\n    const others = parseInt(otherTaxableRef.current.value || 0, 10);\n    if (!basic) {\n      alert('Basic salary is zero. Add some data.');\n      return;\n    }\n\n    /**\n     * As the payments are already converted to yearly,\n     * Change the max values to yearly as well.\n     */\n    const [houseMax, medicalMax, conveyanceMax] = [25000, 10000, 2500].map(i => i * monthsRef.current.value);\n    const amounts = {\n      id: new Date().getTime(),\n      name: values['company'],\n      months: values['months'],\n      festivals: values['festivals'],\n      inputType: values['inputType'],\n      basic: {\n        yearly: basic,\n        exempted: 0,\n        taxable: basic\n      },\n      house: {\n        yearly: house,\n        exempted: calculateMaxExemptionOf(basic, 0.5, houseMax, house),\n        taxable: calculateTaxableOf(basic, 0.5, houseMax, house)\n      },\n      medical: {\n        yearly: medical,\n        exempted: calculateMaxExemptionOf(basic, 0.1, medicalMax, medical),\n        taxable: calculateTaxableOf(basic, 0.1, medicalMax, medical)\n      },\n      conveyance: {\n        yearly: conveyance,\n        exempted: calculateMaxExemptionOf(basic, 0, conveyanceMax, conveyance),\n        taxable: calculateTaxableOf(basic, 1, conveyanceMax, conveyance)\n      },\n      lfa: {\n        yearly: lfa,\n        exempted: lfa,\n        taxable: 0\n      },\n      festival: {\n        yearly: festival,\n        exempted: 0,\n        taxable: festival\n      },\n      others: {\n        yearly: others,\n        exempted: 0,\n        taxable: others\n      }\n    };\n    amounts['gross'] = amounts.festival.yearly + amounts.others.yearly + amounts.basic.yearly + amounts.house.yearly + amounts.medical.yearly + amounts.conveyance.yearly + amounts.lfa.yearly;\n    amounts['net_exempted'] = amounts.festival.exempted + amounts.others.exempted + amounts.basic.exempted + amounts.house.exempted + amounts.medical.exempted + amounts.conveyance.exempted + amounts.lfa.exempted;\n    amounts['net_taxable'] = amounts.festival.taxable + amounts.others.taxable + amounts.basic.taxable + amounts.house.taxable + amounts.medical.taxable + amounts.conveyance.taxable + amounts.lfa.taxable;\n    props.handleInputChange(\"companies\", amounts);\n    resetForms();\n  };\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      xs: \"12\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        ref: companyInfoRef,\n        onSubmit: e => e.preventDefault(),\n        children: /*#__PURE__*/_jsxDEV(Form.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              ref: companyNameRef,\n              value: values['company'],\n              onChange: e => handleChange('company', e.target.value.trim()),\n              placeholder: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-info\",\n              children: \"Employee Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              value: values['months'],\n              ref: monthsRef,\n              onChange: e => handleChange('months', e.target.value),\n              placeholder: \"Months you've worked for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-info\",\n              children: \"Number of months\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              min: \"0\",\n              value: values['festivals'],\n              ref: totalFestivalsRef,\n              onChange: e => handleChange('festivals', e.target.value),\n              placeholder: \"No of Festivals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-info\",\n              children: \"Number of festivals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"col-4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              ref: inputTypeRef,\n              value: values['inputType'],\n              onChange: e => handleChange('inputType', e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"monthly\",\n                children: \"Calculate from Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"yearly\",\n                children: \"Calculate for specified months\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-info\",\n              children: \"Calculation type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      xs: \"12\",\n      style: {\n        display: values['company'] ? 'block' : 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        ref: salaryInputRef,\n        onSubmit: e => {\n          e.preventDefault();\n          calculateTaxableAmount();\n        },\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          size: \"sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n            children: [\"Earnings\", values['company'] ? ` at \"${values['company']}\"` : '', \" - [\", values['months'], \" months] - [\", values['festivals'], \" festivals]\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"thead\", {\n            className: \"thead-dark\",\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"As\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Received (BDT.)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Basic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: basicRef,\n                  placeholder: \"Basic pay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"House rent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: houseRef,\n                  placeholder: \"House rent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Medical Allowance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: medicalRef,\n                  placeholder: \"Medical Allowance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Conveyance Allowance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: conveyanceRef,\n                  placeholder: \"Conveyance Allowance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Leave Fare Assistance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  ref: lfaRef,\n                  className: \"form-control-sm\",\n                  placeholder: \"LFA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Festival Bonus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: festivalRef,\n                  placeholder: \"Festival Bonus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Other Taxable Bonus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  min: \"0\",\n                  className: \"form-control-sm\",\n                  ref: otherTaxableRef,\n                  placeholder: \"Other total Taxable Bonus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: resetForms,\n          variant: \"warning\",\n          size: \"sm\",\n          className: \"float-left\",\n          children: \"Reset above data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          size: \"sm\",\n          variant: \"primary\",\n          className: \"float-right\",\n          children: [\"Calculate \", values['company'] ? 'for ' + values['company'] : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 12\n  }, this);\n}\n_s(SalaryInformation, \"P2HaBRBCvH7C6EHf3bFokntcQI4=\");\n_c = SalaryInformation;\nvar _c;\n$RefreshReg$(_c, \"SalaryInformation\");","map":{"version":3,"names":["Button","Col","Form","Row","Table","useRef","useState","jsxDEV","_jsxDEV","SalaryInformation","props","_s","companyNameRef","monthsRef","totalFestivalsRef","inputTypeRef","companyInfoRef","salaryInputRef","basicRef","houseRef","medicalRef","conveyanceRef","lfaRef","festivalRef","otherTaxableRef","initialCompanyInfo","company","months","festivals","inputType","values","setValues","handleChange","name","value","prevState","resetForms","current","reset","calculateTaxableOf","basic","percent","max","received","atMax","Math","min","calculateMaxExemptionOf","calculateTaxableAmount","alert","festivalMultiplier","basicMultiplier","house","medical","conveyance","lfa","map","i","parseInt","festival","others","houseMax","medicalMax","conveyanceMax","amounts","id","Date","getTime","yearly","exempted","taxable","handleInputChange","children","xs","ref","onSubmit","e","preventDefault","Group","className","Control","onChange","target","trim","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","Text","type","as","style","display","size","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/Abid/Downloads/bd-income-tax-calculator-master/bd-income-tax-calculator-master/src/SalaryInformation.js"],"sourcesContent":["import {Button, Col, Form, Row, Table} from \"react-bootstrap\";\nimport {useRef, useState} from \"react\";\n\nexport default function SalaryInformation(props) {\n    const [companyNameRef, monthsRef, totalFestivalsRef, inputTypeRef] = [useRef(), useRef(), useRef(), useRef()];\n    const [companyInfoRef, salaryInputRef] = [useRef(), useRef()];\n\n    const [basicRef, houseRef, medicalRef, conveyanceRef] = [useRef(), useRef(), useRef(), useRef()];\n    const [lfaRef, festivalRef, otherTaxableRef] = [useRef(), useRef(), useRef()];\n\n    const initialCompanyInfo = {\n        company: '',\n        months: 12,\n        festivals: 2,\n        inputType: 'monthly'\n    };\n    const [values, setValues] = useState(initialCompanyInfo);\n\n    const handleChange = (name, value) => {\n        setValues(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    }\n\n    const resetForms = () => {\n        salaryInputRef.current.reset();\n        // for some reasons, company info refs were not working. IDK\n        setValues({...initialCompanyInfo});\n    }\n\n    const calculateTaxableOf = (basic, percent, max, received) => {\n        const atMax = percent ? Math.min(basic * percent, max) : max;\n        return received > atMax ? received - atMax : 0;\n    }\n\n    const calculateMaxExemptionOf = (basic, percent, max, received) => {\n        const atMax = percent ? Math.min(basic * percent, max) : max;\n        return received > atMax ? atMax : received;\n    }\n\n    const calculateTaxableAmount = () => {\n\n        if (!values['company']) {\n            alert('Add a company name.');\n            return false;\n        }\n\n        let festivalMultiplier = 1;\n        let basicMultiplier = 1;\n        if (values['inputType'] === 'monthly') {\n            festivalMultiplier = values['festivals'];\n            basicMultiplier = values['months'];\n        }\n\n        // already converted to yearly\n        const [basic, house, medical, conveyance, lfa] = [\n            basicRef,\n            houseRef,\n            medicalRef,\n            conveyanceRef,\n            lfaRef,\n        ].map((i) => parseInt(i.current.value || 0, 10) * basicMultiplier);\n        const festival = parseInt(festivalRef.current.value || 0, 10) * festivalMultiplier;\n        const others = parseInt(otherTaxableRef.current.value || 0, 10);\n\n        if (!basic) {\n            alert('Basic salary is zero. Add some data.');\n            return;\n        }\n\n        /**\n         * As the payments are already converted to yearly,\n         * Change the max values to yearly as well.\n         */\n        const [houseMax, medicalMax, conveyanceMax] = [25000, 10000, 2500].map(i => i * monthsRef.current.value);\n\n        const amounts = {\n            id: new Date().getTime(),\n            name: values['company'],\n            months: values['months'],\n            festivals: values['festivals'],\n            inputType: values['inputType'],\n            basic: {\n                yearly: basic,\n                exempted: 0,\n                taxable: basic,\n            },\n            house: {\n                yearly: house,\n                exempted: calculateMaxExemptionOf(basic, 0.5, houseMax, house),\n                taxable: calculateTaxableOf(basic, 0.5, houseMax, house),\n            },\n            medical: {\n                yearly: medical,\n                exempted: calculateMaxExemptionOf(basic, 0.1, medicalMax, medical),\n                taxable: calculateTaxableOf(basic, 0.1, medicalMax, medical),\n            },\n            conveyance: {\n                yearly: conveyance,\n                exempted: calculateMaxExemptionOf(basic, 0, conveyanceMax, conveyance),\n                taxable: calculateTaxableOf(basic, 1, conveyanceMax, conveyance),\n            },\n            lfa: {\n                yearly: lfa,\n                exempted: lfa,\n                taxable: 0,\n            },\n            festival: {\n                yearly: festival,\n                exempted: 0,\n                taxable: festival,\n            },\n            others: {\n                yearly: others,\n                exempted: 0,\n                taxable: others\n            },\n        }\n\n\n        amounts['gross'] = amounts.festival.yearly + amounts.others.yearly +\n            amounts.basic.yearly + amounts.house.yearly +\n            amounts.medical.yearly + amounts.conveyance.yearly + amounts.lfa.yearly;\n\n        amounts['net_exempted'] = amounts.festival.exempted + amounts.others.exempted +\n            amounts.basic.exempted + amounts.house.exempted +\n            amounts.medical.exempted + amounts.conveyance.exempted + amounts.lfa.exempted;\n\n        amounts['net_taxable'] = amounts.festival.taxable + amounts.others.taxable +\n            amounts.basic.taxable + amounts.house.taxable +\n            amounts.medical.taxable + amounts.conveyance.taxable + amounts.lfa.taxable;\n\n        props.handleInputChange(\"companies\", amounts);\n        resetForms();\n    }\n\n    return <Row>\n        <Col xs=\"12\">\n            {/*COMPANY INFORMATION FORM*/}\n            <Form ref={companyInfoRef} onSubmit={e => e.preventDefault()}>\n                <Form.Row>\n                    <Form.Group className=\"col-3\">\n                        <Form.Control ref={companyNameRef} value={values['company']}\n                                      onChange={(e) => handleChange('company', e.target.value.trim())}\n                                      placeholder=\"Employee Name\"/>\n                        <Form.Text className=\"text-info\">\n                            Employee Name\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-3\">\n                        <Form.Control type=\"number\" min=\"0\" value={values['months']} ref={monthsRef}\n                                      onChange={(e) => handleChange('months', e.target.value)}\n                                      placeholder=\"Months you've worked for\"/>\n                        <Form.Text className=\"text-info\">\n                            Number of months\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-2\">\n                        <Form.Control type=\"number\" min=\"0\" value={values['festivals']} ref={totalFestivalsRef}\n                                      onChange={(e) => handleChange('festivals', e.target.value)}\n                                      placeholder=\"No of Festivals\"/>\n                        <Form.Text className=\"text-info\">\n                            Number of festivals\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group className=\"col-4\">\n                        <Form.Control as=\"select\" ref={inputTypeRef} value={values['inputType']}\n                                      onChange={(e) => handleChange('inputType', e.target.value)}>\n                            <option value=\"monthly\">Calculate from Monthly</option>\n                            <option value=\"yearly\">Calculate for specified months</option>\n                        </Form.Control>\n                        <Form.Text className=\"text-info\">\n                            Calculation type\n                        </Form.Text>\n                    </Form.Group>\n                </Form.Row>\n            </Form>\n        </Col>\n        {/* Salary Information */}\n        <Col xs=\"12\" style={{display: values['company'] ? 'block' : 'none'}}>\n            <Form ref={salaryInputRef} onSubmit={e => {\n                e.preventDefault();\n                calculateTaxableAmount();\n            }}>\n                <Table size=\"sm\">\n                    <caption>\n                        Earnings\n                        {values['company'] ? ` at \"${values['company']}\"` : ''} -\n                        [{values['months']} months] -\n                        [{values['festivals']} festivals]\n                    </caption>\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>As</th>\n                            <th>Received (BDT.)</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>Basic</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={basicRef} placeholder=\"Basic pay\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>House rent</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={houseRef} placeholder=\"House rent\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Medical Allowance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={medicalRef} placeholder=\"Medical Allowance\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Conveyance Allowance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={conveyanceRef} placeholder=\"Conveyance Allowance\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Leave Fare Assistance</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" ref={lfaRef} className=\"form-control-sm\"\n                                              placeholder=\"LFA\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Festival Bonus</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={festivalRef} placeholder=\"Festival Bonus\"/>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Other Taxable Bonus</td>\n                            <td>\n                                <Form.Control type=\"number\" min=\"0\" className=\"form-control-sm\"\n                                              ref={otherTaxableRef} placeholder=\"Other total Taxable Bonus\"/>\n                            </td>\n                        </tr>\n                    </tbody>\n                </Table>\n\n                <Button onClick={resetForms} variant=\"warning\" size=\"sm\" className=\"float-left\">\n                    Reset above data\n                </Button>\n                <Button type=\"submit\" size=\"sm\" variant=\"primary\" className=\"float-right\">\n                    Calculate {values['company'] ? 'for ' + values['company'] : ''}\n                </Button>\n            </Form>\n        </Col>\n    </Row>;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}